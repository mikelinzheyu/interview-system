# 开发测试环境 Docker Compose 配置

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: interview-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: interview_system
      MYSQL_USER: interview
      MYSQL_PASSWORD: interview123
      TZ: Asia/Shanghai
    volumes:
      - mysql_data:/var/lib/mysql
      - ../init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - interview-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # 后端 Spring Boot 服务
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: interview-backend-dev
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/interview_system?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai&characterEncoding=utf8
      SPRING_DATASOURCE_USERNAME: interview
      SPRING_DATASOURCE_PASSWORD: interview123
      SERVER_PORT: 8080
      LOGGING_LEVEL_ROOT: INFO
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    networks:
      - interview-network

  # 前端 Nginx 服务
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: http://localhost:8080/api
    container_name: interview-frontend-dev
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - interview-network

volumes:
  mysql_data:
    driver: local

networks:
  interview-network:
    driver: bridge