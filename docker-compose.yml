# AI面试系统 - 生产环境 Docker Compose 配置
version: '3.8'

services:
  # Mock API 后端服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: interview-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      TZ: Asia/Shanghai
    ports:
      - "${BACKEND_PORT:-8080}:3001"
    volumes:
      - ./logs/backend:/app/logs
    networks:
      - interview-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # 前端 Nginx 服务
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://backend:3001/api}
    container_name: interview-frontend
    restart: unless-stopped
    ports:
      - "${FRONTEND_PORT:-80}:80"
      - "${FRONTEND_HTTPS_PORT:-443}:443"
    depends_on:
      backend:
        condition: service_healthy
    volumes:
      - ./logs/frontend:/var/log/nginx
    networks:
      - interview-network
    environment:
      TZ: Asia/Shanghai
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  # Redis 缓存服务 (可选，用于会话存储)
  redis:
    image: redis:7-alpine
    container_name: interview-redis
    restart: unless-stopped
    environment:
      TZ: Asia/Shanghai
    command: >
      redis-server
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    networks:
      - interview-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx 反向代理 (生产环境推荐)
  nginx-proxy:
    image: nginx:alpine
    container_name: interview-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/proxy:/var/log/nginx
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - interview-network
    environment:
      TZ: Asia/Shanghai
    profiles:
      - proxy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

# 数据卷
volumes:
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis

# 网络配置
networks:
  interview-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1
    driver_opts:
      com.docker.network.bridge.name: interview-br0